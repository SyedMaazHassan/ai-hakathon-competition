# Generated by Django 5.1.4 on 2025-09-27 14:13

import apps.depts.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.CharField(editable=False, max_length=50, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.CharField(default='general', max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.CharField(editable=False, max_length=50, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120)),
                ('province', models.CharField(choices=[('punjab', 'Punjab'), ('sindh', 'Sindh'), ('kp', 'Khyber Pakhtunkhwa'), ('balochistan', 'Balochistan'), ('ict', 'Islamabad Capital Territory'), ('gb', 'Gilgit-Baltistan'), ('ajk', 'Azad Jammu & Kashmir')], max_length=20)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('is_major_city', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Cities',
                'indexes': [models.Index(fields=['name', 'province'], name='depts_city_name_be22d4_idx')],
                'unique_together': {('name', 'province')},
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.CharField(editable=False, max_length=50, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('police', 'Police'), ('fire_brigade', 'Fire Brigade'), ('ambulance', 'Ambulance/Medical Emergency'), ('sewerage', 'Sewerage & Water'), ('electricity', 'Electricity'), ('gas', 'Gas Company'), ('bomb_disposal', 'Bomb Disposal'), ('nadra', 'NADRA'), ('health', 'Health Department'), ('municipal', 'Municipal Services'), ('traffic_police', 'Traffic Police'), ('cybercrime', 'Cybercrime'), ('disaster_mgmt', 'Disaster Management')], max_length=32)),
                ('description', models.TextField(blank=True)),
                ('main_phone', models.CharField(blank=True, max_length=40)),
                ('main_email', models.EmailField(blank=True, max_length=254)),
                ('emergency_number', models.CharField(blank=True, max_length=20)),
                ('logo', models.URLField(blank=True)),
                ('is_24x7', models.BooleanField(default=False)),
                ('response_time_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'indexes': [models.Index(fields=['category', 'is_active'], name='depts_depar_categor_27cf67_idx')],
            },
        ),
        migrations.CreateModel(
            name='CitizenRequest',
            fields=[
                ('id', models.CharField(editable=False, max_length=50, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('case_code', models.CharField(db_index=True, default=apps.depts.models.new_case_code, editable=False, max_length=12, unique=True)),
                ('request_text', models.TextField()),
                ('category', models.CharField(blank=True, choices=[('police', 'Police'), ('fire_brigade', 'Fire Brigade'), ('ambulance', 'Ambulance/Medical Emergency'), ('sewerage', 'Sewerage & Water'), ('electricity', 'Electricity'), ('gas', 'Gas Company'), ('bomb_disposal', 'Bomb Disposal'), ('nadra', 'NADRA'), ('health', 'Health Department'), ('municipal', 'Municipal Services'), ('traffic_police', 'Traffic Police'), ('cybercrime', 'Cybercrime'), ('disaster_mgmt', 'Disaster Management')], max_length=32)),
                ('urgency_level', models.CharField(blank=True, choices=[('low', 'Low Priority'), ('medium', 'Medium Priority'), ('high', 'High Priority'), ('critical', 'Critical Emergency')], max_length=12)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('triage_source', models.CharField(choices=[('llm', 'AI/LLM Analysis'), ('rules', 'Rule-based System'), ('manual', 'Manual Assignment'), ('fallback', 'Fallback/Degraded Mode')], default='llm', max_length=8)),
                ('ai_response', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('analyzing', 'AI Analysis in Progress'), ('routing', 'Routing to Department'), ('assigned', 'Assigned to Department'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('escalated', 'Escalated')], db_index=True, default='submitted', max_length=16)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('expected_response_time', models.DateTimeField(blank=True, null=True)),
                ('degraded_mode_used', models.BooleanField(default=False)),
                ('is_emergency', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to=settings.AUTH_USER_MODEL)),
                ('assigned_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='depts.department')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DepartmentEntity',
            fields=[
                ('id', models.CharField(editable=False, max_length=50, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('hospital', 'Hospital'), ('police_station', 'Police Station'), ('fire_station', 'Fire Station'), ('office', 'Office Building'), ('service_center', 'Service Center'), ('clinic', 'Clinic'), ('headquarters', 'Headquarters')], max_length=24)),
                ('phone', models.CharField(blank=True, max_length=40)),
                ('services', models.JSONField(blank=True, default=dict)),
                ('capacity', models.PositiveIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='entities', to='depts.city')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='entities', to='depts.department')),
            ],
        ),
        migrations.CreateModel(
            name='CitizenRequestAssignment',
            fields=[
                ('id', models.CharField(editable=False, max_length=50, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('analyzing', 'AI Analysis in Progress'), ('routing', 'Routing to Department'), ('assigned', 'Assigned to Department'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('escalated', 'Escalated')], default='assigned', max_length=16)),
                ('assignment_notes', models.TextField(blank=True)),
                ('priority_override', models.CharField(blank=True, choices=[('low', 'Low Priority'), ('medium', 'Medium Priority'), ('high', 'High Priority'), ('critical', 'Critical Emergency')], max_length=12)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('citizen_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='depts.citizenrequest')),
                ('department_entity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assignments', to='depts.departmententity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='citizenrequest',
            name='assigned_entity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='depts.departmententity'),
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.CharField(editable=False, max_length=50, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('calendar_event_id', models.CharField(blank=True, max_length=100)),
                ('calendar_link', models.URLField(blank=True)),
                ('scheduled_at', models.DateTimeField()),
                ('duration_minutes', models.PositiveIntegerField(default=30)),
                ('location_details', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('completed', 'Completed'), ('no_show', 'No Show')], default='scheduled', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('citizen_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='depts.citizenrequest')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='depts.department')),
                ('entity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='depts.departmententity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmergencyCall',
            fields=[
                ('id', models.CharField(editable=False, max_length=50, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('call_id', models.CharField(blank=True, max_length=100)),
                ('phone_number', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('initiated', 'Call Initiated'), ('ringing', 'Ringing'), ('answered', 'Call Answered'), ('completed', 'Call Completed'), ('failed', 'Call Failed'), ('busy', 'Line Busy'), ('no_answer', 'No Answer')], default='initiated', max_length=20)),
                ('script_used', models.TextField(blank=True)),
                ('message_sent', models.TextField(blank=True)),
                ('response_received', models.TextField(blank=True)),
                ('initiated_at', models.DateTimeField(auto_now_add=True)),
                ('answered_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('citizen_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_calls', to='depts.citizenrequest')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='depts.department')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.CharField(editable=False, max_length=50, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lat', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('lng', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('area', models.CharField(blank=True, max_length=160)),
                ('raw_address', models.CharField(blank=True, max_length=255)),
                ('place_id', models.CharField(blank=True, max_length=200)),
                ('formatted_address', models.TextField(blank=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='locations', to='depts.city')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='departmententity',
            name='location',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='depts.location'),
        ),
        migrations.AddField(
            model_name='citizenrequest',
            name='target_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='depts.location'),
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.CharField(editable=False, max_length=50, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notification_type', models.CharField(choices=[('analysis', 'AI Analysis'), ('categorization', 'Category Detection'), ('location_mapping', 'Location Mapping'), ('dept_assignment', 'Department Assignment'), ('email', 'Email Notification'), ('sms', 'SMS Notification'), ('call', 'Emergency Call'), ('booking', 'Appointment Booked'), ('escalation', 'Request Escalated')], max_length=20)),
                ('recipient', models.CharField(max_length=200)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('message', models.TextField()),
                ('sent_successfully', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True)),
                ('external_id', models.CharField(blank=True, max_length=100)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('citizen_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='depts.citizenrequest')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RequestFeedback',
            fields=[
                ('id', models.CharField(editable=False, max_length=50, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('overall_rating', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('response_time_rating', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('accuracy_rating', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('communication_rating', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('comment', models.TextField(blank=True)),
                ('suggestions', models.TextField(blank=True)),
                ('would_recommend', models.BooleanField(blank=True, null=True)),
                ('citizen_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='depts.citizenrequest')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ActionLog',
            fields=[
                ('id', models.CharField(editable=False, max_length=50, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agent_type', models.CharField(blank=True, choices=[('request_analysis', 'Request Analysis Agent'), ('location_mapping', 'Location Mapping Agent'), ('triage', 'Triage Agent'), ('escalation', 'Escalation Agent'), ('communication', 'Communication Agent')], max_length=20, null=True)),
                ('action_type', models.CharField(choices=[('analysis', 'AI Analysis'), ('categorization', 'Category Detection'), ('location_mapping', 'Location Mapping'), ('dept_assignment', 'Department Assignment'), ('email', 'Email Notification'), ('sms', 'SMS Notification'), ('call', 'Emergency Call'), ('booking', 'Appointment Booked'), ('escalation', 'Request Escalated')], max_length=20)),
                ('description', models.TextField()),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('citizen_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='depts.citizenrequest')),
            ],
            options={
                'indexes': [models.Index(fields=['citizen_request', 'created_at'], name='depts_actio_citizen_fb040b_idx'), models.Index(fields=['action_type', 'success'], name='depts_actio_action__786575_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='departmententity',
            index=models.Index(fields=['city', 'type'], name='depts_depar_city_id_903b40_idx'),
        ),
        migrations.AddIndex(
            model_name='departmententity',
            index=models.Index(fields=['department', 'is_active'], name='depts_depar_departm_86729d_idx'),
        ),
        migrations.AddIndex(
            model_name='citizenrequest',
            index=models.Index(fields=['status', 'created_at'], name='depts_citiz_status_8641c7_idx'),
        ),
        migrations.AddIndex(
            model_name='citizenrequest',
            index=models.Index(fields=['urgency_level'], name='depts_citiz_urgency_90fa0d_idx'),
        ),
        migrations.AddIndex(
            model_name='citizenrequest',
            index=models.Index(fields=['category'], name='depts_citiz_categor_1b2188_idx'),
        ),
        migrations.AddIndex(
            model_name='citizenrequest',
            index=models.Index(fields=['is_emergency', 'created_at'], name='depts_citiz_is_emer_345c10_idx'),
        ),
        migrations.AddIndex(
            model_name='citizenrequest',
            index=models.Index(fields=['user', 'created_at'], name='depts_citiz_user_id_e1695b_idx'),
        ),
    ]
