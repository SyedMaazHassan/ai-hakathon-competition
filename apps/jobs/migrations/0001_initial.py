# Generated by Django 5.1.4 on 2025-09-22 14:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationProcess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply_url', models.URLField(blank=True, null=True)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('screening_questions', models.JSONField(blank=True, default=list)),
                ('interview_stages', models.JSONField(blank=True, default=list)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('industry', models.CharField(blank=True, max_length=255, null=True)),
                ('size', models.CharField(blank=True, max_length=100, null=True)),
                ('about', models.TextField(blank=True, null=True)),
                ('locations', models.JSONField(blank=True, default=list)),
            ],
        ),
        migrations.CreateModel(
            name='Compensation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(blank=True, choices=[('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound'), ('AED', 'UAE Dirham'), ('SAR', 'Saudi Riyal'), ('PKR', 'Pakistani Rupee'), ('other', 'Other')], max_length=10, null=True)),
                ('min_amount', models.FloatField(blank=True, null=True)),
                ('max_amount', models.FloatField(blank=True, null=True)),
                ('period', models.CharField(blank=True, choices=[('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly'), ('other', 'Other'), ('one_time', 'One Time')], max_length=50, null=True)),
                ('equity', models.TextField(blank=True, null=True)),
                ('bonus', models.TextField(blank=True, null=True)),
                ('benefits', models.JSONField(blank=True, default=list)),
            ],
        ),
        migrations.CreateModel(
            name='PostingMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(blank=True, max_length=100, null=True)),
                ('source_url', models.URLField(blank=True, null=True)),
                ('posted_at', models.DateField(blank=True, null=True)),
                ('posted_at_meta', models.JSONField(blank=True, null=True)),
                ('application_deadline', models.DateField(blank=True, null=True)),
                ('application_deadline_meta', models.JSONField(blank=True, null=True)),
                ('requisition_id', models.CharField(blank=True, max_length=100, null=True)),
                ('ats_board', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ParsedJob',
            fields=[
                ('id', models.CharField(editable=False, max_length=50, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('alternative_titles', models.JSONField(blank=True, default=list)),
                ('seniority', models.CharField(blank=True, choices=[('intern', 'Intern'), ('entry', 'Entry'), ('junior', 'Junior'), ('mid', 'Mid'), ('senior', 'Senior'), ('lead', 'Lead'), ('manager', 'Manager'), ('director', 'Director'), ('vp', 'VP'), ('executive', 'Executive'), ('other', 'Other'), ('not_specified', 'Not Specified')], max_length=50, null=True)),
                ('employment_type', models.CharField(blank=True, choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('internship', 'Internship'), ('freelance', 'Freelance'), ('temporary', 'Temporary'), ('volunteer', 'Volunteer'), ('not_specified', 'Not Specified'), ('other', 'Other')], max_length=50, null=True)),
                ('work_location_type', models.CharField(blank=True, choices=[('remote', 'Remote'), ('hybrid', 'Hybrid'), ('onsite', 'Onsite'), ('not_specified', 'Not Specified'), ('other', 'Other')], max_length=50, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('responsibilities', models.JSONField(blank=True, default=list)),
                ('day_to_day', models.JSONField(blank=True, default=list)),
                ('outcomes', models.JSONField(blank=True, default=list)),
                ('experience', models.JSONField(blank=True, null=True)),
                ('education', models.JSONField(blank=True, null=True)),
                ('authorizations', models.JSONField(blank=True, null=True)),
                ('location_requirements', models.JSONField(blank=True, null=True)),
                ('required_skills', models.JSONField(blank=True, default=list)),
                ('preferred_skills', models.JSONField(blank=True, default=list)),
                ('required_tools', models.JSONField(blank=True, default=list)),
                ('preferred_tools', models.JSONField(blank=True, default=list)),
                ('requirement_groups', models.JSONField(blank=True, default=list)),
                ('normalized_skills', models.JSONField(blank=True, default=list)),
                ('normalized_tools', models.JSONField(blank=True, default=list)),
                ('languages', models.JSONField(blank=True, default=list)),
                ('certifications', models.JSONField(blank=True, default=list)),
                ('perks', models.JSONField(blank=True, default=list)),
                ('keywords', models.JSONField(blank=True, default=list)),
                ('role_taxonomy', models.JSONField(blank=True, default=dict)),
                ('diversity_statement', models.TextField(blank=True, null=True)),
                ('equal_opportunity_statement', models.TextField(blank=True, null=True)),
                ('parsing_confidence', models.FloatField(blank=True, null=True)),
                ('application', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jobs.applicationprocess')),
                ('company', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jobs.companyinfo')),
                ('compensation', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jobs.compensation')),
                ('posting', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jobs.postingmetadata')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
